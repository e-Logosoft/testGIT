package com.eLogoSoft.cwrv.domain;
import java.io.Serializable;
import java.lang.StringBuilder;
import java.util.Calendar;
import java.util.LinkedHashSet;
import java.util.Set;
import javax.persistence.Id;
import java.util.Date;
import java.math.*;
import javax.xml.bind.annotation.*;
import javax.persistence.*;

/**
 * TlmDriverPayment Entity
 * 
 * Generated by Dunamis App Generator
 */

@Entity
@Table(name = "TlmDriverPayment")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(namespace = "ELogoSoftRest/com/eLogoSoft/cwrv/domain", name = "TlmDriverPayment")
public class TlmDriverPayment implements Serializable {
    private static final long serialVersionUID = 1L;


    @Column(name = "id")
    @Basic(fetch = FetchType.EAGER)
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @XmlElement
    private Integer id;  
    

    @Column(name = "amount")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Integer amount;

    @Column(name = "batch")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private BigInteger batch;

    @Column(name = "cardNumber")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String cardNumber;

    @Column(name = "comment")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String comment;

    @Column(name = "addDate")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Date addDate;

    @Column(name = "note")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String note;

    @Column(name = "paymentDate")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Date paymentDate;

    @Column(name = "paymentNumber")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Integer paymentNumber;

    @Column(name = "reference")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private BigInteger reference;

    @Column(name = "allowedAdvance")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private BigInteger allowedAdvance;

    @Column(name = "totalPaid")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private BigInteger totalPaid;

    @Column(name = "availableAdvance")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private BigInteger availableAdvance;

    @Column(name = "result")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String result;

    @Column(name = "status")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String status;

    @Column(name = "paymentType")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String paymentType;

    @Column(name = "updateDate")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Date updateDate;

    @Column(name = "version")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Integer version;

    @Column(name = "comdataBatchFK")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private BigInteger comdataBatchFK;

    @Column(name = "unitDispatchFK")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private BigInteger unitDispatchFK;

    @Column(name = "postedUserFK")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private BigInteger postedUserFK;
    
    
    @ManyToOne
    @JoinColumn(name="addUserId")
    private UserLogin addUser;
    
    @ManyToOne
    @JoinColumn(name="driverId")
    private TlmDriver driver;
    
    @ManyToOne
    @JoinColumn(name="unitId")
    private TlmUnit unit;
    
    @ManyToOne
    @JoinColumn(name="updateUserId")
    private UserLogin updateUser;


    public void setId(Integer id) {
        this.id = id;
    }

    public Integer getId() {
        return this.id;
    }

        
    public Integer getAmount() {
        return amount;
    }
    
    public void setAmount(Integer amount) {
        this.amount = amount;
    }
    
    public BigInteger getBatch() {
        return batch;
    }
    
    public void setBatch(BigInteger batch) {
        this.batch = batch;
    }
    
    public String getCardNumber() {
        return cardNumber;
    }
    
    public void setCardNumber(String cardNumber) {
        this.cardNumber = cardNumber;
    }
    
    public String getComment() {
        return comment;
    }
    
    public void setComment(String comment) {
        this.comment = comment;
    }
    
    public Date getAddDate() {
        return addDate;
    }
    
    public void setAddDate(Date addDate) {
        this.addDate = addDate;
    }
    
    public String getNote() {
        return note;
    }
    
    public void setNote(String note) {
        this.note = note;
    }
    
    public Date getPaymentDate() {
        return paymentDate;
    }
    
    public void setPaymentDate(Date paymentDate) {
        this.paymentDate = paymentDate;
    }
    
    public Integer getPaymentNumber() {
        return paymentNumber;
    }
    
    public void setPaymentNumber(Integer paymentNumber) {
        this.paymentNumber = paymentNumber;
    }
    
    public BigInteger getReference() {
        return reference;
    }
    
    public void setReference(BigInteger reference) {
        this.reference = reference;
    }

    public BigInteger getAllowedAdvance() {
        return allowedAdvance;
    }
    
    public void setAllowedAdvance(BigInteger allowedAdvance) {
        this.allowedAdvance = allowedAdvance;
    }

    public BigInteger getTotalPaid() {
        return totalPaid;
    }
    
    public void setTotalPaid(BigInteger totalPaid) {
        this.totalPaid = totalPaid;
    }

    public BigInteger getAvailableAdvance() {
        return availableAdvance;
    }
    
    public void setAvailableAdvance(BigInteger availableAdvance) {
        this.availableAdvance = availableAdvance;
    } 
    
    public String getResult() {
        return result;
    }
    
    public void setResult(String result) {
        this.result = result;
    }
    
    public String getStatus() {
        return status;
    }
    
    public void setStatus(String status) {
        this.status = status;
    }
    
    public String getPaymentType() {
        return paymentType;
    }
    
    public void setPaymentType(String paymentType) {
        this.paymentType = paymentType;
    }
    
    public Date getUpdateDate() {
        return updateDate;
    }
    
    public void setUpdateDate(Date updateDate) {
        this.updateDate = updateDate;
    }
    
    public Integer getVersion() {
        return version;
    }
    
    public void setVersion(Integer version) {
        this.version = version;
    }
    
    public BigInteger getComdataBatchFK() {
        return comdataBatchFK;
    }
    
    public void setComdataBatchFK(BigInteger comdataBatchFK) {
        this.comdataBatchFK = comdataBatchFK;
    }
    
    public BigInteger getUnitDispatchFK() {
        return unitDispatchFK;
    }
    
    public void setUnitDispatchFK(BigInteger unitDispatchFK) {
        this.unitDispatchFK = unitDispatchFK;
    }
    
    public BigInteger getPostedUserFK() {
        return postedUserFK;
    }
    
    public void setPostedUserFK(BigInteger postedUserFK) {
        this.postedUserFK = postedUserFK;
    }
    
    public UserLogin getAddUser() {
        return addUser;
    }
    
    public void setAddUser(UserLogin addUser) {
        this.addUser = addUser;
    }
    
    public TlmDriver getDriver() {
        return driver;
    }
    
    public void setDriver(TlmDriver driver) {
        this.driver = driver;
    }
    
    public TlmUnit getUnit() {
        return unit;
    }
    
    public void setUnit(TlmUnit unit) {
        this.unit = unit;
    }
    
    public UserLogin getUpdateUser() {
        return updateUser;
    }
    
    public void setUpdateUser(UserLogin updateUser) {
        this.updateUser = updateUser;
    }


    public TlmDriverPayment() {
    }


    public String toString() {
        StringBuilder buffer = new StringBuilder();
        buffer.append("id=[").append(id).append("] ");
        return buffer.toString();
    }


    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = (int) (prime * result + ((id == null) ? 0 : id.hashCode()));
        return result;
    }


    public boolean equals(Object obj) {
        if (obj == this)
            return true;
        if (!(obj instanceof TlmDriverPayment))
            return false;
        TlmDriverPayment equalCheck = (TlmDriverPayment) obj;
        if ((id == null && equalCheck.id != null) || (id != null && equalCheck.id == null))
            return false;
        if (id != null && !id.equals(equalCheck.id))
            return false;
        return true;
    }

}