package com.eLogoSoft.cwrv.domain;
import java.io.Serializable;
import java.lang.StringBuilder;
import java.util.Calendar;
import java.util.LinkedHashSet;
import java.util.Set;
import javax.persistence.Id;
import java.util.Date;
import java.math.*;
import javax.xml.bind.annotation.*;
import javax.persistence.*;

/**
 * ResetPasswordRequest Entity
 * 
 * Generated by Dunamis App Generator
 */

@Entity
@Table(name = "ResetPasswordRequest")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(namespace = "ELogoSoftRest/com/eLogoSoft/cwrv/domain", name = "ResetPasswordRequest")
public class ResetPasswordRequest implements Serializable {
    private static final long serialVersionUID = 1L;


    @Column(name = "id")
    @Basic(fetch = FetchType.EAGER)
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @XmlElement
    private Integer id;  
    

    @Column(name = "emailAddress")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String emailAddress;

    @Column(name = "requestAt")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Date requestAt;

    @Column(name = "requestIP")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String requestIP;

    @Column(name = "resetAt")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Date resetAt;

    @Column(name = "resetCode")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String resetCode;

    @Column(name = "resetIP")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String resetIP;

    @Column(name = "status")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String status;

    @Column(name = "version")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Integer version;
    
    
    @ManyToOne
    @JoinColumn(name="userId")
    private UserProfile user;


    public void setId(Integer id) {
        this.id = id;
    }

    public Integer getId() {
        return this.id;
    }

        
    public String getEmailAddress() {
        return emailAddress;
    }
    
    public void setEmailAddress(String emailAddress) {
        this.emailAddress = emailAddress;
    }
    
    public Date getRequestAt() {
        return requestAt;
    }
    
    public void setRequestAt(Date requestAt) {
        this.requestAt = requestAt;
    }
    
    public String getRequestIP() {
        return requestIP;
    }
    
    public void setRequestIP(String requestIP) {
        this.requestIP = requestIP;
    }
    
    public Date getResetAt() {
        return resetAt;
    }
    
    public void setResetAt(Date resetAt) {
        this.resetAt = resetAt;
    }
    
    public String getResetCode() {
        return resetCode;
    }
    
    public void setResetCode(String resetCode) {
        this.resetCode = resetCode;
    }
    
    public String getResetIP() {
        return resetIP;
    }
    
    public void setResetIP(String resetIP) {
        this.resetIP = resetIP;
    }
    
    public String getStatus() {
        return status;
    }
    
    public void setStatus(String status) {
        this.status = status;
    }
    
    public Integer getVersion() {
        return version;
    }
    
    public void setVersion(Integer version) {
        this.version = version;
    }
    
    public UserProfile getUser() {
        return user;
    }
    
    public void setUser(UserProfile user) {
        this.user = user;
    }


    public ResetPasswordRequest() {
    }


    public String toString() {
        StringBuilder buffer = new StringBuilder();
        buffer.append("id=[").append(id).append("] ");
        return buffer.toString();
    }


    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = (int) (prime * result + ((id == null) ? 0 : id.hashCode()));
        return result;
    }


    public boolean equals(Object obj) {
        if (obj == this)
            return true;
        if (!(obj instanceof ResetPasswordRequest))
            return false;
        ResetPasswordRequest equalCheck = (ResetPasswordRequest) obj;
        if ((id == null && equalCheck.id != null) || (id != null && equalCheck.id == null))
            return false;
        if (id != null && !id.equals(equalCheck.id))
            return false;
        return true;
    }

}