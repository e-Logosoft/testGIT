package com.eLogoSoft.cwrv.domain;
import java.io.Serializable;
import java.lang.StringBuilder;
import java.util.Calendar;
import java.util.LinkedHashSet;
import java.util.Set;
import javax.persistence.Id;
import java.util.Date;
import java.math.*;
import javax.xml.bind.annotation.*;
import javax.persistence.*;

/**
 * TlmDriverAlert Entity
 * 
 * Generated by Dunamis App Generator
 */

@Entity
@Table(name = "TlmDriverAlert")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(namespace = "ELogoSoftRest/com/eLogoSoft/cwrv/domain", name = "TlmDriverAlert")
public class TlmDriverAlert implements Serializable {
    private static final long serialVersionUID = 1L;


    @Column(name = "id")
    @Basic(fetch = FetchType.EAGER)
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @XmlElement
    private Integer id;  
    

    @Column(name = "alertDate")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Date alertDate;

    @Column(name = "alertNote")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String alertNote;

    @Column(name = "alertReason")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String alertReason;

    @Column(name = "alertSeverity")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String alertSeverity;

    @Column(name = "alertType")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String alertType;

    @Column(name = "clearedDate")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Date clearedDate;

    @Column(name = "clearedReason")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String clearedReason;

    @Column(name = "addDate")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Date addDate;

    @Column(name = "expirationAlert")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Boolean expirationAlert;

    @Column(name = "notified")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Boolean notified;

    @Column(name = "notifiedDate")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Date notifiedDate;

    @Column(name = "notifyDriver")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Boolean notifyDriver;

    @Column(name = "status")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String status;

    @Column(name = "updateDate")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Date updateDate;

    @Column(name = "version")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Integer version;

    @Column(name = "alertingUserFK")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String alertingUserFK;

    @Column(name = "cleardByFK")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String cleardByFK;

    @Column(name = "driverTruckFK")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private BigInteger driverTruckFK;

    @Column(name = "notifiedByFK")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String notifiedByFK;
    
    
    @ManyToOne
    @JoinColumn(name="addUserId")
    private UserLogin addUser;
    
    @ManyToOne
    @JoinColumn(name="driverId")
    private TlmDriver driver;

    @ManyToOne
    @JoinColumn(name="driverTruckId")
    private TlmDriverTruck driverTruck;
    
    @ManyToOne
    @JoinColumn(name="updateUserId")
    private UserLogin updateUser;


    public void setId(Integer id) {
        this.id = id;
    }

    public Integer getId() {
        return this.id;
    }

        
    public Date getAlertDate() {
        return alertDate;
    }
    
    public void setAlertDate(Date alertDate) {
        this.alertDate = alertDate;
    }
    
    public String getAlertNote() {
        return alertNote;
    }
    
    public void setAlertNote(String alertNote) {
        this.alertNote = alertNote;
    }
    
    public String getAlertReason() {
        return alertReason;
    }
    
    public void setAlertReason(String alertReason) {
        this.alertReason = alertReason;
    }
    
    public String getAlertSeverity() {
        return alertSeverity;
    }
    
    public void setAlertSeverity(String alertSeverity) {
        this.alertSeverity = alertSeverity;
    }
    
    public String getAlertType() {
        return alertType;
    }
    
    public void setAlertType(String alertType) {
        this.alertType = alertType;
    }
    
    public Date getClearedDate() {
        return clearedDate;
    }
    
    public void setClearedDate(Date clearedDate) {
        this.clearedDate = clearedDate;
    }
    
    public String getClearedReason() {
        return clearedReason;
    }
    
    public void setClearedReason(String clearedReason) {
        this.clearedReason = clearedReason;
    }
    
    public Date getAddDate() {
        return addDate;
    }
    
    public void setAddDate(Date addDate) {
        this.addDate = addDate;
    }
    
    public Boolean getExpirationAlert() {
        return expirationAlert;
    }
    
    public void setExpirationAlert(Boolean expirationAlert) {
        this.expirationAlert = expirationAlert;
    }
    
    public Boolean getNotified() {
        return notified;
    }
    
    public void setNotified(Boolean notified) {
        this.notified = notified;
    }
    
    public Date getNotifiedDate() {
        return notifiedDate;
    }
    
    public void setNotifiedDate(Date notifiedDate) {
        this.notifiedDate = notifiedDate;
    }
    
    public Boolean getNotifyDriver() {
        return notifyDriver;
    }
    
    public void setNotifyDriver(Boolean notifyDriver) {
        this.notifyDriver = notifyDriver;
    }
    
    public String getStatus() {
        return status;
    }
    
    public void setStatus(String status) {
        this.status = status;
    }
    
    public Date getUpdateDate() {
        return updateDate;
    }
    
    public void setUpdateDate(Date updateDate) {
        this.updateDate = updateDate;
    }
    
    public Integer getVersion() {
        return version;
    }
    
    public void setVersion(Integer version) {
        this.version = version;
    }
    
    public String getAlertingUserFK() {
        return alertingUserFK;
    }
    
    public void setAlertingUserFK(String alertingUserFK) {
        this.alertingUserFK = alertingUserFK;
    }
    
    public String getCleardByFK() {
        return cleardByFK;
    }
    
    public void setCleardByFK(String cleardByFK) {
        this.cleardByFK = cleardByFK;
    }
    
    public BigInteger getDriverTruckFK() {
        return driverTruckFK;
    }
    
    public void setDriverTruckFK(BigInteger driverTruckFK) {
        this.driverTruckFK = driverTruckFK;
    }
    
    public String getNotifiedByFK() {
        return notifiedByFK;
    }
    
    public void setNotifiedByFK(String notifiedByFK) {
        this.notifiedByFK = notifiedByFK;
    }
    
    public UserLogin getAddUser() {
        return addUser;
    }
    
    public void setAddUser(UserLogin addUser) {
        this.addUser = addUser;
    }
    
    public TlmDriver getDriver() {
        return driver;
    }
    
    public void setDriver(TlmDriver driver) {
        this.driver = driver;
    }

    public TlmDriverTruck getDriverTruck() {
        return driverTruck;
    }
    
    public void setDriverTruck(TlmDriverTruck driverTruck) {
        this.driverTruck = driverTruck;
    }
    
    public UserLogin getUpdateUser() {
        return updateUser;
    }
    
    public void setUpdateUser(UserLogin updateUser) {
        this.updateUser = updateUser;
    }


    public TlmDriverAlert() {
    }


    public String toString() {
        StringBuilder buffer = new StringBuilder();
        buffer.append("id=[").append(id).append("] ");
        return buffer.toString();
    }


    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = (int) (prime * result + ((id == null) ? 0 : id.hashCode()));
        return result;
    }


    public boolean equals(Object obj) {
        if (obj == this)
            return true;
        if (!(obj instanceof TlmDriverAlert))
            return false;
        TlmDriverAlert equalCheck = (TlmDriverAlert) obj;
        if ((id == null && equalCheck.id != null) || (id != null && equalCheck.id == null))
            return false;
        if (id != null && !id.equals(equalCheck.id))
            return false;
        return true;
    }

}