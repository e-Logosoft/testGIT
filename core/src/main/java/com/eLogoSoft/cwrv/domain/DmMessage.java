package com.eLogoSoft.cwrv.domain;
import java.io.Serializable;
import java.lang.StringBuilder;
import java.util.Calendar;
import java.util.LinkedHashSet;
import java.util.Set;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;

import java.util.Date;
import java.math.*;
import javax.xml.bind.annotation.*;
import javax.persistence.*;

/**
 * DmMessage Entity
 * 
 * Generated by Dunamis App Generator
 */

@Entity
@Table(name = "DmMessage")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(namespace = "ELogoSoftRest/com/eLogoSoft/cwrv/domain", name = "DmMessage")
public class DmMessage implements Serializable {
    private static final long serialVersionUID = 1L;


    @Column(name = "id")
    @Basic(fetch = FetchType.EAGER)
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @XmlElement
    private Integer id;  
    

    @Column(name = "accessKey")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String accessKey;

    @Column(name = "customer")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String customerName;

    @Column(name = "dealer")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String dealerName;

    @Column(name = "delay")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String delay;

    @Column(name = "dispatch")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String dispatch;

    @Column(name = "driverName")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String driverName;

    @Column(name = "emailTo")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String emailTo;

    @Column(name = "html")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String html;

    @Column(name = "numTries")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Integer numTries;

    @Column(name = "sentDate")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Date sentDate;

    @Column(name = "status")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String status;

    @Column(name = "subject")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String subject;

    @Column(name = "templateId")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String templateId;

    @Column(name = "text")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String text;

    @Column(name = "toMessage")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String toMessage;

    @Column(name = "unitName")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String unitName;
    
    @ManyToOne
    @JoinColumn(name="addUserId")
    private UserLogin addUser;
    
    @ManyToOne
    @JoinColumn(name="driverId")
    private TlmDriver driver;
    
    @ManyToOne
    @JoinColumn(name="unitId")
    private TlmUnit unit;
    
    @ManyToOne
    @JoinColumn(name="customerId")
    private TlmCustomer customer;
    
    @ManyToOne
    @JoinColumn(name="customerContactId")
    private TlmCustomerContact customerContact;
    
    @ManyToOne
    @JoinColumn(name="dealerId")
    private TlmDealer dealer;
    
    @ManyToOne
    @JoinColumn(name="updateUserId")
    private UserLogin updateUser;
    
    @ManyToOne
    @JoinColumn(name="delayedUnitId")
    private TlmDelayedUnit delayedUnit;

    public TlmDelayedUnit getDelayedUnit() {
		return delayedUnit;
	}

	public void setDelayedUnit(TlmDelayedUnit delayedUnit) {
		this.delayedUnit = delayedUnit;
	}

	public void setId(Integer id) {
        this.id = id;
    }

    public Integer getId() {
        return this.id;
    }

        
    public String getAccessKey() {
        return accessKey;
    }
    
    public void setAccessKey(String accessKey) {
        this.accessKey = accessKey;
    }
    
    public String getCustomerName() {
        return customerName;
    }
    
    public void setCustomerName(String customerName) {
        this.customerName = customerName;
    }
    
    public String getDealerName() {
        return dealerName;
    }
    
    public void setDealerName(String dealerName) {
        this.dealerName = dealerName;
    }
    
    public String getDelay() {
        return delay;
    }
    
    public void setDelay(String delay) {
        this.delay = delay;
    }
    
    public String getDispatch() {
        return dispatch;
    }
    
    public void setDispatch(String dispatch) {
        this.dispatch = dispatch;
    }
    
    public String getDriverName() {
        return driverName;
    }
    
    public void setDriverName(String driverName) {
        this.driverName = driverName;
    }
    
    public String getEmailTo() {
        return emailTo;
    }
    
    public void setEmailTo(String emailTo) {
        this.emailTo = emailTo;
    }
    
    public String getHtml() {
        return html;
    }
    
    public void setHtml(String html) {
        this.html = html;
    }
    
    public Integer getNumTries() {
        return numTries;
    }
    
    public void setNumTries(Integer numTries) {
        this.numTries = numTries;
    }
    
    public Date getSentDate() {
        return sentDate;
    }
    
    public void setSentDate(Date sentDate) {
        this.sentDate = sentDate;
    }
    
    public String getStatus() {
        return status;
    }
    
    public void setStatus(String status) {
        this.status = status;
    }
    
    public String getSubject() {
        return subject;
    }
    
    public void setSubject(String subject) {
        this.subject = subject;
    }
    
    public String getTemplateId() {
        return templateId;
    }
    
    public void setTemplateId(String templateId) {
        this.templateId = templateId;
    }
    
    public String getText() {
        return text;
    }
    
    public void setText(String text) {
        this.text = text;
    }
    
    public String getToMessage() {
        return toMessage;
    }
    
    public void setToMessage(String toMessage) {
        this.toMessage = toMessage;
    }
    
    public String getUnitName() {
        return unitName;
    }
    
    public void setUnitName(String unitName) {
        this.unitName = unitName;
    }
    
    public UserLogin getAddUser() {
        return addUser;
    }
    
    public void setAddUser(UserLogin addUser) {
        this.addUser = addUser;
    }
    
    public TlmDriver getDriver() {
        return driver;
    }
    
    public void setDriver(TlmDriver driver) {
        this.driver = driver;
    }
    
    public TlmUnit getUnit() {
        return unit;
    }
    
    public void setUnit(TlmUnit unit) {
        this.unit = unit;
    }
    
    public TlmCustomer getCustomer() {
        return customer;
    }
    
    public void setCustomer(TlmCustomer customer) {
        this.customer = customer;
    }
    
    public TlmCustomerContact getCustomerContact() {
        return customerContact;
    }
    
    public void setCustomerContact(TlmCustomerContact customerContact) {
        this.customerContact = customerContact;
    }
    
    public TlmDealer getDealer() {
        return dealer;
    }
    
    public void setDealer(TlmDealer dealer) {
        this.dealer = dealer;
    }
    
    public UserLogin getUpdateUser() {
        return updateUser;
    }
    
    public void setUpdateUser(UserLogin updateUser) {
        this.updateUser = updateUser;
    }

    public DmMessage() {
    }


    public String toString() {
        StringBuilder buffer = new StringBuilder();
        buffer.append("id=[").append(id).append("] ");
        return buffer.toString();
    }


    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = (int) (prime * result + ((id == null) ? 0 : id.hashCode()));
        return result;
    }


    public boolean equals(Object obj) {
        if (obj == this)
            return true;
        if (!(obj instanceof DmMessage))
            return false;
        DmMessage equalCheck = (DmMessage) obj;
        if ((id == null && equalCheck.id != null) || (id != null && equalCheck.id == null))
            return false;
        if (id != null && !id.equals(equalCheck.id))
            return false;
        return true;
    }

}