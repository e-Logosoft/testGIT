package com.eLogoSoft.cwrv.domain;
import java.io.Serializable;
import java.lang.StringBuilder;
import java.util.Calendar;
import java.util.LinkedHashSet;
import java.util.Set;
import javax.persistence.Id;
import java.util.Date;
import java.math.*;
import javax.xml.bind.annotation.*;
import javax.persistence.*;

/**
 * MdField Entity
 * 
 * Generated by Dunamis App Generator
 */

@Entity
@Table(name = "MdField")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(namespace = "ELogoSoftRest/com/eLogoSoft/cwrv/domain", name = "MdField")
public class MdField implements Serializable {
    private static final long serialVersionUID = 1L;


    @Column(name = "id")
    @Basic(fetch = FetchType.EAGER)
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @XmlElement
    private Integer id;  
    

    @Column(name = "constrainedBy")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String constrainedBy;

    @Column(name = "dataType")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String dataType;

    @Column(name = "defaultExpr")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String defaultExpr;

    @Column(name = "defaultValue")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String defaultValue;

    @Column(name = "displayEN")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String displayEN;

    @Column(name = "formula")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String formula;

    @Column(name = "fieldGT")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String fieldGT;

    @Column(name = "fieldGTE")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Boolean fieldGTE;

    @Column(name = "fieldLT")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String fieldLT;

    @Column(name = "fieldLTE")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Boolean fieldLTE;

    @Column(name = "matchPattern")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String matchPattern;

    @Column(name = "fieldName")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String fieldName;

    @Column(name = "fieldNotNull")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Boolean fieldNotNull;
    
    
    @ManyToOne
    @JoinColumn(name="mdClassId")
    private MdClass mdClass;


    public void setId(Integer id) {
        this.id = id;
    }

    public Integer getId() {
        return this.id;
    }

        
    public String getConstrainedBy() {
        return constrainedBy;
    }
    
    public void setConstrainedBy(String constrainedBy) {
        this.constrainedBy = constrainedBy;
    }
    
    public String getDataType() {
        return dataType;
    }
    
    public void setDataType(String dataType) {
        this.dataType = dataType;
    }
    
    public String getDefaultExpr() {
        return defaultExpr;
    }
    
    public void setDefaultExpr(String defaultExpr) {
        this.defaultExpr = defaultExpr;
    }
    
    public String getDefaultValue() {
        return defaultValue;
    }
    
    public void setDefaultValue(String defaultValue) {
        this.defaultValue = defaultValue;
    }
    
    public String getDisplayEN() {
        return displayEN;
    }
    
    public void setDisplayEN(String displayEN) {
        this.displayEN = displayEN;
    }
    
    public String getFormula() {
        return formula;
    }
    
    public void setFormula(String formula) {
        this.formula = formula;
    }
    
    public String getFieldGT() {
        return fieldGT;
    }
    
    public void setFieldGT(String fieldGT) {
        this.fieldGT = fieldGT;
    }
    
    public Boolean getFieldGTE() {
        return fieldGTE;
    }
    
    public void setFieldGTE(Boolean fieldGTE) {
        this.fieldGTE = fieldGTE;
    }
    
    public String getFieldLT() {
        return fieldLT;
    }
    
    public void setFieldLT(String fieldLT) {
        this.fieldLT = fieldLT;
    }
    
    public Boolean getFieldLTE() {
        return fieldLTE;
    }
    
    public void setFieldLTE(Boolean fieldLTE) {
        this.fieldLTE = fieldLTE;
    }
    
    public String getMatchPattern() {
        return matchPattern;
    }
    
    public void setMatchPattern(String matchPattern) {
        this.matchPattern = matchPattern;
    }
    
    public String getFieldName() {
        return fieldName;
    }
    
    public void setFieldName(String fieldName) {
        this.fieldName = fieldName;
    }
    
    public Boolean getFieldNotNull() {
        return fieldNotNull;
    }
    
    public void setFieldNotNull(Boolean fieldNotNull) {
        this.fieldNotNull = fieldNotNull;
    }
    
    public MdClass getMdClass() {
        return mdClass;
    }
    
    public void setMdClass(MdClass mdClass) {
        this.mdClass = mdClass;
    }


    public MdField() {
    }


    public String toString() {
        StringBuilder buffer = new StringBuilder();
        buffer.append("id=[").append(id).append("] ");
        return buffer.toString();
    }


    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = (int) (prime * result + ((id == null) ? 0 : id.hashCode()));
        return result;
    }


    public boolean equals(Object obj) {
        if (obj == this)
            return true;
        if (!(obj instanceof MdField))
            return false;
        MdField equalCheck = (MdField) obj;
        if ((id == null && equalCheck.id != null) || (id != null && equalCheck.id == null))
            return false;
        if (id != null && !id.equals(equalCheck.id))
            return false;
        return true;
    }

}