package com.eLogoSoft.cwrv.domain;
import java.io.Serializable;
import java.lang.StringBuilder;
import java.util.Calendar;
import java.util.LinkedHashSet;
import java.util.Set;
import javax.persistence.Id;
import java.util.Date;
import java.math.*;
import javax.xml.bind.annotation.*;
import javax.persistence.*;

/**
 * TlmUnitShuttle Entity
 * 
 * Generated by Dunamis App Generator
 */

@Entity
@Table(name = "TlmUnitShuttle")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(namespace = "ELogoSoftRest/com/eLogoSoft/cwrv/domain", name = "TlmUnitShuttle")
public class TlmUnitShuttle implements Serializable {
    private static final long serialVersionUID = 1L;


    @Column(name = "id")
    @Basic(fetch = FetchType.EAGER)
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @XmlElement
    private Integer id;  
    

    @Column(name = "contractAmount")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Integer contractAmount;

    @Column(name = "addDate")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Date addDate;

    @Column(name = "enteredDate")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Date enteredDate;

    @Column(name = "paidAmount")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Integer paidAmount;

    @Column(name = "paidDate")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Date paidDate;

    @Column(name = "reason")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String reason;

    @Column(name = "returned")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Boolean returned;

    @Column(name = "shuttleDate")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Date shuttleDate;

    @Column(name = "status")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String status;

    @Column(name = "updateDate")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Date updateDate;

    @Column(name = "version")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private Integer version;

    @Column(name = "yardFK")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private BigInteger yardFK;
    
    
    @ManyToOne
    @JoinColumn(name="addUserId")
    private UserLogin addUser;
    
    @ManyToOne
    @JoinColumn(name="driverId")
    private TlmDriver driver;
    
    @ManyToOne
    @JoinColumn(name="factoryId")
    private TlmFactory factory;
    
    @ManyToOne
    @JoinColumn(name="unitId")
    private TlmUnit unit;
    
    @ManyToOne
    @JoinColumn(name="updateUserId")
    private UserLogin updateUser;


    public void setId(Integer id) {
        this.id = id;
    }

    public Integer getId() {
        return this.id;
    }

        
    public Integer getContractAmount() {
        return contractAmount;
    }
    
    public void setContractAmount(Integer contractAmount) {
        this.contractAmount = contractAmount;
    }
    
    public Date getAddDate() {
        return addDate;
    }
    
    public void setAddDate(Date addDate) {
        this.addDate = addDate;
    }
    
    public Date getEnteredDate() {
        return enteredDate;
    }
    
    public void setEnteredDate(Date enteredDate) {
        this.enteredDate = enteredDate;
    }
    
    public Integer getPaidAmount() {
        return paidAmount;
    }
    
    public void setPaidAmount(Integer paidAmount) {
        this.paidAmount = paidAmount;
    }
    
    public Date getPaidDate() {
        return paidDate;
    }
    
    public void setPaidDate(Date paidDate) {
        this.paidDate = paidDate;
    }
    
    public String getReason() {
        return reason;
    }
    
    public void setReason(String reason) {
        this.reason = reason;
    }
    
    public Boolean getReturned() {
        return returned;
    }
    
    public void setReturned(Boolean returned) {
        this.returned = returned;
    }
    
    public Date getShuttleDate() {
        return shuttleDate;
    }
    
    public void setShuttleDate(Date shuttleDate) {
        this.shuttleDate = shuttleDate;
    }
    
    public String getStatus() {
        return status;
    }
    
    public void setStatus(String status) {
        this.status = status;
    }
    
    public Date getUpdateDate() {
        return updateDate;
    }
    
    public void setUpdateDate(Date updateDate) {
        this.updateDate = updateDate;
    }
    
    public Integer getVersion() {
        return version;
    }
    
    public void setVersion(Integer version) {
        this.version = version;
    }
    
    public BigInteger getYardFK() {
        return yardFK;
    }
    
    public void setYardFK(BigInteger yardFK) {
        this.yardFK = yardFK;
    }
    
    public UserLogin getAddUser() {
        return addUser;
    }
    
    public void setAddUser(UserLogin addUser) {
        this.addUser = addUser;
    }
    
    public TlmDriver getDriver() {
        return driver;
    }
    
    public void setDriver(TlmDriver driver) {
        this.driver = driver;
    }
    
    public TlmFactory getFactory() {
        return factory;
    }
    
    public void setFactory(TlmFactory factory) {
        this.factory = factory;
    }
    
    public TlmUnit getUnit() {
        return unit;
    }
    
    public void setUnit(TlmUnit unit) {
        this.unit = unit;
    }
    
    public UserLogin getUpdateUser() {
        return updateUser;
    }
    
    public void setUpdateUser(UserLogin updateUser) {
        this.updateUser = updateUser;
    }


    public TlmUnitShuttle() {
    }


    public String toString() {
        StringBuilder buffer = new StringBuilder();
        buffer.append("id=[").append(id).append("] ");
        return buffer.toString();
    }


    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = (int) (prime * result + ((id == null) ? 0 : id.hashCode()));
        return result;
    }


    public boolean equals(Object obj) {
        if (obj == this)
            return true;
        if (!(obj instanceof TlmUnitShuttle))
            return false;
        TlmUnitShuttle equalCheck = (TlmUnitShuttle) obj;
        if ((id == null && equalCheck.id != null) || (id != null && equalCheck.id == null))
            return false;
        if (id != null && !id.equals(equalCheck.id))
            return false;
        return true;
    }

}