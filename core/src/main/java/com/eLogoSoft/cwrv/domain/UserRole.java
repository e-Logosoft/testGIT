package com.eLogoSoft.cwrv.domain;

import java.io.Serializable;

import java.lang.StringBuilder;

import java.util.Calendar;
import java.util.LinkedHashSet;
import java.util.Set;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import java.util.Date;
import java.math.*;
import javax.persistence.NamedQuery;
import javax.xml.bind.annotation.*;
import javax.persistence.*;

/**
 * UserRole Entity
 *
 * @generated by Dunamis Code Generator
 */

@Entity
@Table(name = "UserRole")
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(namespace = "ELogoSoft/com/eLogoSoft/cwrv/domain", name = "UserRole")
public class UserRole implements Serializable {
    private static final long serialVersionUID = 1L;


    @Column(name = "id")
    @Basic(fetch = FetchType.EAGER)
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @XmlElement
    private Integer id;



    @Column(name = "userRole")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String userRole;



    @Column(name = "loginId")
    @Basic(fetch = FetchType.EAGER)
    @XmlElement
    private String loginId;


    public void setId(Integer id) {
        this.id = id;
    }

    public Integer getId() {
        return this.id;
    }


    	public String getUserRole() {
		return userRole;
	}

	public void setUserRole(String userRole) {
		this.userRole = userRole;
	}

	public String getLoginId() {
		return loginId;
	}

	public void setLoginId(String loginId) {
		this.loginId = loginId;
	}





    public UserRole() {
    }


    public String toString() {

        StringBuilder buffer = new StringBuilder();

        buffer.append("id=[").append(id).append("] ");
        return buffer.toString();
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = (int) (prime * result + ((id == null) ? 0 : id.hashCode()));
        return result;
    }

    public boolean equals(Object obj) {
        if (obj == this)
            return true;
        if (!(obj instanceof UserRole))
            return false;
        UserRole equalCheck = (UserRole) obj;
        if ((id == null && equalCheck.id != null) || (id != null && equalCheck.id == null))
            return false;
        if (id != null && !id.equals(equalCheck.id))
            return false;
        return true;
    }

}
